{
  "_args": [
    [
      {
        "raw": "standard-json@^1.0.0",
        "scope": null,
        "escapedName": "standard-json",
        "name": "standard-json",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\traffic\\traffic_app\\node_modules\\mqtt\\node_modules\\snazzy"
    ]
  ],
  "_from": "standard-json@>=1.0.0 <2.0.0",
  "_id": "standard-json@1.0.2",
  "_inCache": true,
  "_location": "/standard-json",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/standard-json-1.0.2.tgz_1482831092060_0.47405349905602634"
  },
  "_npmUser": {
    "name": "feross",
    "email": "feross@feross.org"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "standard-json@^1.0.0",
    "scope": null,
    "escapedName": "standard-json",
    "name": "standard-json",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/snazzy"
  ],
  "_resolved": "https://registry.npmjs.org/standard-json/-/standard-json-1.0.2.tgz",
  "_shasum": "82dea4a14c78cd9e35d38cde4b88ac6b62596a23",
  "_shrinkwrap": null,
  "_spec": "standard-json@^1.0.0",
  "_where": "C:\\traffic\\traffic_app\\node_modules\\mqtt\\node_modules\\snazzy",
  "author": {
    "name": "Dan Flettre",
    "email": "fletd01@yahoo.com"
  },
  "bin": {
    "standard-json": "./bin.js"
  },
  "bugs": {
    "url": "https://github.com/flet/standard-json/issues"
  },
  "dependencies": {
    "concat-stream": "^1.5.0"
  },
  "description": "Format JavaScript Standard Style output to a JSON array.",
  "devDependencies": {
    "standard": "*",
    "tap-spec": "^4.0.2",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "82dea4a14c78cd9e35d38cde4b88ac6b62596a23",
    "tarball": "https://registry.npmjs.org/standard-json/-/standard-json-1.0.2.tgz"
  },
  "gitHead": "5684a07605a9eacb2dc0db9acc2bbd23ca9df77d",
  "homepage": "https://github.com/flet/standard-json",
  "keywords": [
    "format",
    "json",
    "output",
    "standard",
    "style"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "feross",
      "email": "feross@feross.org"
    },
    {
      "name": "flet",
      "email": "flettre@gmail.com"
    },
    {
      "name": "gtanner",
      "email": "gtanner@gmail.com"
    }
  ],
  "name": "standard-json",
  "optionalDependencies": {},
  "readme": "# standard-json\n\n[![npm][npm-image]][npm-url]\n[![travis][travis-image]][travis-url]\n[![downloads][downloads-image]][downloads-url]\n \n[npm-image]: https://img.shields.io/npm/v/standard-json.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/standard-json\n[travis-image]: https://img.shields.io/travis/Flet/standard-json.svg?style=flat-square\n[travis-url]: https://travis-ci.org/Flet/standard-json\n[downloads-image]: https://img.shields.io/npm/dm/standard-json.svg?style=flat\n[downloads-url]: https://npmjs.org/package/standard-json\n\nFormat JavaScript Standard Style output to a JSON array!\n\n## Install\n\n```\n# use the CLI\nnpm install --global standard-json\n\n# or use programatically\nnpm install --save standard-json\n```\n\n## CLI Usage\n\n```bash\nstandard | standard-json\n# exit code will be 1 if any errors are found\n\nstandard --verbose | standard-json\n# the ruleId attribute will be filled in if --verbose is passed\n\n# works with anything based on standard-engine!\nsemistandard | standard-json\ndoublestandard | standard-json\n\n```\n\n## Example output JSON (formatted)\nTypical `standard` output:\n```bash\nstandard: Use JavaScript Standard Style (https://github.com/feross/standard)\n  /home/icmpdev/code/standard-json/bin.js:19:21: Missing space before function parentheses.\n  /home/icmpdev/code/standard-json/index.js:6:35: Strings must use singlequote.\n  /home/icmpdev/code/standard-json/index.js:6:51: Extra semicolon.\n  /home/icmpdev/code/standard-json/index.js:17:5: Keyword \"if\" must be followed by whitespace.\n  /home/icmpdev/code/standard-json/index.js:22:28: Extra semicolon.\n```\n\nAfter running through standard-json:\n```json\n[\n  {\n    \"filePath\": \"/home/flet/code/something-great/bin.js\",\n    \"messages\": [\n      {\n        \"line\": \"19\",\n        \"column\": \"21\",\n        \"message\": \"Missing space before function parentheses.\"\n      }\n    ]\n  },\n  {\n    \"filePath\": \"/home/flet/code/something-great/index.js\",\n    \"messages\": [\n      {\n        \"line\": \"6\",\n        \"column\": \"35\",\n        \"message\": \"Strings must use singlequote.\"\n      },\n      {\n        \"line\": \"6\",\n        \"column\": \"51\",\n        \"message\": \"Extra semicolon.\"\n      },\n      {\n        \"line\": \"17\",\n        \"column\": \"5\",\n        \"message\": \"Keyword \\\"if\\\" must be followed by whitespace.\"\n      },\n      {\n        \"line\": \"22\",\n        \"column\": \"28\",\n        \"message\": \"Extra semicolon.\"\n      }\n    ]\n  }\n]\n```\n\n## API Usage\n\n```js\n\nvar txt = someStandardThing() // produces Standard Style output\n\nvar standardJson = require('standard-json')\n\nvar output = standardJson(txt)\n// output will be an array of errors or an empty array.\n\nvar output = standardJson(txt, {noisey: true})\n// output will be an array of errors or an empty array.\n// The banner will be `console.error`'d (plus any other non-parsable lines)\n\n```\n\n## Inspiration\n\nThis package was inspired by:\n- [snazzy](https://github.com/feross/snazzy)\n- https://github.com/feross/standard/issues/222\n\n\n## Contributing\n\nContributions welcome! Please read the [contributing guidelines](CONTRIBUTING.md) first.\n\n## License\n\n[ISC](LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/flet/standard-json.git"
  },
  "scripts": {
    "test": "standard && tape test/*.js | tap-spec"
  },
  "version": "1.0.2"
}
